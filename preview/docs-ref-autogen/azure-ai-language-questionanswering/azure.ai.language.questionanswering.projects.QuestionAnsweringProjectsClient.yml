### YamlMime:PythonClass
uid: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient
name: QuestionAnsweringProjectsClient
fullName: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient
module: azure.ai.language.questionanswering.projects
inheritances:
- azure.ai.language.questionanswering.projects._operations._operations.QuestionAnsweringProjectsClientOperationsMixin
summary: 'The language service API is a suite of natural language processing (NLP)
  skills built with

  best-in-class Microsoft machine learning algorithms.  The API can be used to analyze

  unstructured text for tasks such as sentiment analysis, key phrase extraction, language

  detection and question answering. Further documentation can be found in `<a

  href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview">https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview</a>`.'
constructor:
  syntax: 'QuestionAnsweringProjectsClient(endpoint: str, credential: AzureKeyCredential,
    **kwargs: Any)'
  parameters:
  - name: endpoint
    description: 'Supported Cognitive Services endpoint (e.g.,

      [https://](https://)`<resource-name>`.api.cognitiveservices.azure.com).'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: Credential needed for the client to connect to Azure.
    isRequired: true
    types:
    - <xref:azure.core.credentials.AzureKeyCredential>
  - name: api_version
    description: 'Api Version. The default value is "2021-10-01". Note that overriding
      this

      default value may result in unsupported behavior.'
    types:
    - <xref:str>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
methods:
- uid: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient.close
  name: close
  signature: close() -> None
- uid: azure.ai.language.questionanswering.projects.QuestionAnsweringProjectsClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = client.send_request(request)

    <HttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/python/protocol/quickstart](https://aka.ms/azsdk/python/protocol/quickstart)'
  signature: 'send_request(request: HttpRequest, **kwargs: Any) -> HttpResponse'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.HttpResponse>
