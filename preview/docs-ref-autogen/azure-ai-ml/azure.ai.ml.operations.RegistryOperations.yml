### YamlMime:PythonClass
uid: azure.ai.ml.operations.RegistryOperations
name: RegistryOperations
fullName: azure.ai.ml.operations.RegistryOperations
module: azure.ai.ml.operations
inheritances:
- builtins.object
summary: 'RegistryOperations.


  You should not instantiate this class directly. Instead, you should

  create an MLClient instance that instantiates it for you and

  attaches it as an attribute.'
constructor:
  syntax: 'RegistryOperations(operation_scope: azure.ai.ml._scope_dependent_operations.OperationScope,
    service_client: azure.ai.ml._restclient.v2022_10_01_preview._azure_machine_learning_workspaces.AzureMachineLearningWorkspaces,
    all_operations: azure.ai.ml._scope_dependent_operations.OperationsContainer, credentials:
    Optional[azure.core.credentials.TokenCredential] = None, **kwargs: Dict)'
  parameters:
  - name: operation_scope
  - name: service_client
  - name: all_operations
  - name: credentials
    defaultValue: None
methods:
- uid: azure.ai.ml.operations.RegistryOperations.begin_create_or_update
  name: begin_create_or_update
  signature: 'begin_create_or_update(registry: azure.ai.ml.entities._registry.registry.Registry,
    update_dependent_resources: bool = False, **kwargs: Dict) -> azure.core.polling._poller.LROPoller[azure.ai.ml._restclient.v2022_10_01_preview.models._models_py3.Registry]'
- uid: azure.ai.ml.operations.RegistryOperations.get
  name: get
  summary: Get a registry by name.
  signature: 'get(name: str = None) -> azure.ai.ml.entities._registry.registry.Registry'
  parameters:
  - name: name
    description: Name of the registry.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The registry with the provided name.
    types:
    - <xref:azure.ai.ml.entities.Registry>
  exceptions:
  - type: azure.ai.ml.exceptions.ValidationException
    description: 'Raised if Registry name cannot be

      successfully validated. Details will be provided in the error message.'
- uid: azure.ai.ml.operations.RegistryOperations.list
  name: list
  summary: 'List all registries that the user has access to in the current

    resource group or subscription.'
  signature: list() -> Iterable[azure.ai.ml.entities._registry.registry.Registry]
  parameters:
  - name: scope
    description: scope of the listing, "resource_group" or "subscription", defaults
      to "resource_group"
    isRequired: true
    types:
    - <xref:str>, <xref:optional>
  return:
    description: An iterator like instance of Registry objects
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.ml.entities.Registry>]
