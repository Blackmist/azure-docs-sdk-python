### YamlMime:PythonClass
uid: azure.mgmt.rdbms.mysql_flexibleservers.operations.AzureADAdministratorsOperations
name: AzureADAdministratorsOperations
fullName: azure.mgmt.rdbms.mysql_flexibleservers.operations.AzureADAdministratorsOperations
module: azure.mgmt.rdbms.mysql_flexibleservers.operations
inheritances:
- builtins.object
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.mgmt.rdbms.mysql_flexibleservers.MySQLManagementClient>'s\n\
  >\n> <xref:azure_ad_administrators> attribute.\n>"
constructor:
  syntax: AzureADAdministratorsOperations(*args, **kwargs)
methods:
- uid: azure.mgmt.rdbms.mysql_flexibleservers.operations.AzureADAdministratorsOperations.begin_create_or_update
  name: begin_create_or_update
  summary: Creates or updates an existing Azure Active Directory administrator.
  signature: 'begin_create_or_update(resource_group_name: str, server_name: str, administrator_name:
    Union[str, azure.mgmt.rdbms.mysql_flexibleservers.models._my_sql_management_client_enums.AdministratorName],
    parameters: azure.mgmt.rdbms.mysql_flexibleservers.models._models_py3.AzureADAdministrator,
    **kwargs: Any) -> azure.core.polling._poller.LROPoller[azure.mgmt.rdbms.mysql_flexibleservers.models._models_py3.AzureADAdministrator]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server.
    isRequired: true
    types:
    - <xref:str>
  - name: administrator_name
    description: The name of the Azure AD Administrator.
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.rdbms.mysql_flexibleservers.models.AdministratorName>
  - name: parameters
    description: The required parameters for creating or updating an aad administrator.
    isRequired: true
    types:
    - <xref:azure.mgmt.rdbms.mysql_flexibleservers.models.AzureADAdministrator>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of LROPoller that returns either AzureADAdministrator
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.rdbms.mysql_flexibleservers.models.AzureADAdministrator>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.rdbms.mysql_flexibleservers.operations.AzureADAdministratorsOperations.begin_delete
  name: begin_delete
  summary: Deletes an Azure AD Administrator.
  signature: 'begin_delete(resource_group_name: str, server_name: str, administrator_name:
    Union[str, azure.mgmt.rdbms.mysql_flexibleservers.models._my_sql_management_client_enums.AdministratorName],
    **kwargs: Any) -> azure.core.polling._poller.LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server.
    isRequired: true
    types:
    - <xref:str>
  - name: administrator_name
    description: The name of the Azure AD Administrator.
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.rdbms.mysql_flexibleservers.models.AdministratorName>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.rdbms.mysql_flexibleservers.operations.AzureADAdministratorsOperations.get
  name: get
  summary: Gets information about an azure ad administrator.
  signature: 'get(resource_group_name: str, server_name: str, administrator_name:
    Union[str, azure.mgmt.rdbms.mysql_flexibleservers.models._my_sql_management_client_enums.AdministratorName],
    **kwargs: Any) -> azure.mgmt.rdbms.mysql_flexibleservers.models._models_py3.AzureADAdministrator'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server.
    isRequired: true
    types:
    - <xref:str>
  - name: administrator_name
    description: The name of the Azure AD Administrator.
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.mgmt.rdbms.mysql_flexibleservers.models.AdministratorName>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: AzureADAdministrator, or the result of cls(response)
    types:
    - <xref:azure.mgmt.rdbms.mysql_flexibleservers.models.AzureADAdministrator>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.rdbms.mysql_flexibleservers.operations.AzureADAdministratorsOperations.list_by_server
  name: list_by_server
  summary: List all the AAD administrators in a given server.
  signature: 'list_by_server(resource_group_name: str, server_name: str, **kwargs:
    Any) -> Iterable[azure.mgmt.rdbms.mysql_flexibleservers.models._models_py3.AdministratorListResult]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: server_name
    description: The name of the server.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either AdministratorListResult or the
      result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.rdbms.mysql_flexibleservers.models.AdministratorListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.rdbms.mysql_flexibleservers.operations.AzureADAdministratorsOperations.models
  name: models
  signature: models = <module 'azure.mgmt.rdbms.mysql_flexibleservers.models' from
    'C:\\hostedtoolcache\\windows\\Python\\3.9.13\\x64\\lib\\site-packages\\azure\\mgmt\\rdbms\\mysql_flexibleservers\\models\\__init__.py'>
