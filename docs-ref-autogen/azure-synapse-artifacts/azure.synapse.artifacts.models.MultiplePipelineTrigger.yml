### YamlMime:PythonClass
uid: azure.synapse.artifacts.models.MultiplePipelineTrigger
name: MultiplePipelineTrigger
fullName: azure.synapse.artifacts.models.MultiplePipelineTrigger
module: azure.synapse.artifacts.models
inheritances:
- azure.synapse.artifacts.models._models_py3.Trigger
summary: 'Base class for all triggers that support one to many model for trigger to
  pipeline.


  You probably want to use the sub-classes and not this class directly. Known sub-classes
  are:

  BlobEventsTrigger, BlobTrigger, CustomEventsTrigger, ScheduleTrigger


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'MultiplePipelineTrigger(*, additional_properties: Optional[Dict[str, collections.abc.MutableMapping[str,
    Any]]] = None, description: Optional[str] = None, annotations: Optional[List[collections.abc.MutableMapping[str,
    Any]]] = None, pipelines: Optional[List[_models.TriggerPipelineReference]] = None,
    **kwargs)'
variables:
- description: 'Unmatched properties from the message are deserialized to this

    collection.'
  name: additional_properties
  types:
  - <xref:dict>[<xref:str>, <xref:JSON>]
- description: Trigger type. Required.
  name: type
  types:
  - <xref:str>
- description: Trigger description.
  name: description
  types:
  - <xref:str>
- description: 'Indicates if trigger is running or not. Updated when Start/Stop APIs
    are

    called on the Trigger. Known values are: "Started", "Stopped", and "Disabled".'
  name: runtime_state
  types:
  - <xref:str>
  - <xref:azure.synapse.artifacts.models.TriggerRuntimeState>
- description: List of tags that can be used for describing the trigger.
  name: annotations
  types:
  - <xref:list>[<xref:JSON>]
- description: Pipelines that need to be started.
  name: pipelines
  types:
  - <xref:list>[<xref:azure.synapse.artifacts.models.TriggerPipelineReference>]
